#!/bin/sh
TYPE=$(gum choose "fix" "feat" "chore" "docs" "nit" "refactor" "test" "revert" "ci" "perf" "style" "config")
[ -z "$TYPE" ] && exit
SCOPE=$(gum input --placeholder "scope")

# Since the scope is optional, wrap it in parentheses if it has a value.
test -n "$SCOPE" && SCOPE="($SCOPE)"

# Pre-populate the input with the type(scope): so that the user may change it
SUMMARY=$(gum input --value "$TYPE$SCOPE: " --placeholder "Summary of this change")
DESCRIPTION=$(gum write --placeholder "Details of this change (CTRL+C to finish)")

test -n "$DESCRIPTION" && DESCRIPTION=" -m \"$DESCRIPTION\""

# Commit these changes
gum confirm "Commit changes? Result command: 'git commit -m \"$SUMMARY\"$DESCRIPTION'" && git commit -m "$SUMMARY" $DESCRIPTION
